Problem Statement: Given an array that contains only 1 and 0 return the count of maximum consecutive ones in the array.
Example 1:

Input: prices = {1, 1, 0, 1, 1, 1}

Output: 3

Explanation: There are two consecutive 1’s and three consecutive 1’s in the array out of which maximum is 3.

Input: prices = {1, 0, 1, 1, 0, 1} 

Output: 2

Explanation: There are two consecutive 1's in the array. 
--------------------------------------------------------------------------------------------------------------------------------
Solution:
import java.util.*;

public class Main {
    public static int maxConsecutiveOnes(int[] arr, int N) {
      int count = 0;
      int max_count = 0;
      for(int i=0;i<N;i++) {
        if(arr[i] == 1) {
          count++;
        }else {
          count = 0;
        }
        max_count = Math.max(max_count, count);
      }
      return max_count;
    }
    public static void main(String[] args) {
      int[] arr = {1,1,0,1,1,1,1};
      int n = arr.length;
      int result = maxConsecutiveOnes(arr, n);
      System.out.println("The result is: "+ result);
  }
}
// Time complexity: O(N)
// Space Complexity: O(1) - Auxilary Space
