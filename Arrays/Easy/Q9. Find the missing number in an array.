Problem Statement: Given an integer N and an array of size N-1 containing N-1 numbers between 1 to N. Find the number(between 1 to N), 
that is not present in the given array.
Example 1:
Input Format:
 N = 5, array[] = {1,2,4,5}
Result:
 3
Explanation: 
In the given array, number 3 is missing. So, 3 is the answer.

Example 2:
Input Format:
 N = 3, array[] = {1,3}
Result:
 2
Explanation: 
In the given array, number 2 is missing. So, 2 is the answer.
----------------------------------------------------------------------------------------------------------------------------------
import java.util.*;

public class Main {
    public static int function(int[] arr, int N) {
      // Optimal Approch.
      // Calculate the sum from 1 to N.
      int sum = 0;
      for(int i=1;i<=N;i++) {
        sum += i;
      }
      // calculate the sum of array.
      int sum1 = 0;
      for(int i=0;i<arr.length;i++) {
        sum1 += arr[i];
      }
      // Substract both the sums.
      int result = sum - sum1;
      // return the result.
      return result;
    }
    public static void main(String[] args) {
      int N = 6;
      int[] arr = {1,2,3,5,6};
      int z = function(arr, N);
      System.out.println(z);
  }
}
// Time complexity: O(N)
// Space Complexity: O(1)
